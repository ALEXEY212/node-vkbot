'use strict';

/**
 * Module dependencies
 * @private
 */
const apiKey   = require('../../config').api.emotions;
const prequest = require('request-promise');

/**
 * Local constants
 * @private
 */
const SERVICE_URL = 'https://api.projectoxford.ai/emotion/v1.0/recognize';

/**
 * Run command
 * @param  {Arguments}  arg
 * @param  {Function}   callback
 * @public
 */
function run (arg, callback) {
  let argPhoto  = arg.attachment('photo');
  let messageId = arg.source.messageId;
  let VK        = arg.source._vkapi;

  // –ù–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
  if (argPhoto === null) 
    return callback(null);

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –µ–≥–æ ID
  return VK.call('messages.getById', {
      message_ids: messageId
    })
    // –ü–æ–ª—É—á–∞–µ–º —Å–Ω–∞—á–∞–ª–∞ access_key, –∞ –∑–∞—Ç–µ–º 
    // –æ–±—ä–µ–∫—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞
    .then(response => {
      let key = response.items[0].attachments[0].photo.access_key;

      return VK.call('photos.getById', {
        photos: argPhoto + '_' + key
      });
    })
    // –ò–∑ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ "–≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º" –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ. 
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–∏—Å—É —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ñ–æ—Ç–æ, –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    .then(response => {
      let url = response[0].photo_604;

      return prequest.post(SERVICE_URL, {
        // –í –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º API –∫–ª—é—á
        headers: {
          'Content-Type': 'application/json', 
          'Ocp-Apim-Subscription-Key': apiKey
        }, 

        // –í —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä "url" (—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ)
        body: {
          url
        }, 

        // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç –≤ JSON
        json: true
      });
    })
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –æ—Ç–≤–µ—Ç
    .then(response => {
      // –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç => –ª–∏—Ü–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã
      if (!response || !response[0]) 
        return callback(null, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –ª–∏—Ü–æ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.');

      let textToSend = '';
      let emotions   = response[0].scores;

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–π –∏ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤–∏–¥
      for (let i = 0, emoKeys = Object.keys(emotions), len = emoKeys.length; i < len; i++) 
        emotions[emoKeys[i]] = (emotions[emoKeys[i]] * 100).toFixed(1) + '%';

      // –û—Ç–≤–µ—Ç–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, –∑–Ω–∞—á–∏—Ç 
      // –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±–æ–ª–µ–µ, —á–µ–º –æ–¥–Ω–æ –ª–∏—Ü–æ
      if (response.length > 1) 
        textToSend += '–ù–∞ —Ñ–æ—Ç–æ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –ª–∏—Ü–∞. –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —ç–º–æ—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ. \n\n';

      textToSend += `üò† –ó–ª–æ—Å—Ç—å: ${emotions.anger}\n` + 
                    `üòè –ü—Ä–µ–∑—Ä–µ–Ω–∏–µ: ${emotions.contempt}\n` + 
                    `üòí –û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ: ${emotions.disgust}\n` + 
                    `üò± –°—Ç—Ä–∞—Ö: ${emotions.fear}\n` + 
                    `üòä –°—á–∞—Å—Ç—å–µ: ${emotions.happiness}\n` + 
                    `üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å: ${emotions.neutral}\n` + 
                    `üòû –ì—Ä—É—Å—Ç—å: ${emotions.sadness}\n` + 
                    `üò≤ –£–¥–∏–≤–ª–µ–Ω–∏–µ: ${emotions.surprise}`;

      return callback(null, textToSend);
    })
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –æ—à–∏–±–∫–∏
    .catch(error => {
      // –û–¥–Ω–∞ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ—à–∏–±–æ–∫:
      // 1. –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
      // 2. –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏—è –ª–∏—Ü–∞ –Ω–∞ —Ñ–æ—Ç–æ
      // 3. –õ–∏—Ü –Ω–∞ —Ñ–æ—Ç–æ –±–æ–ª–µ–µ 64
      // 4. –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å content-type
      if (error.statusCode === 400) 
        return callback(null, '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —ç–º–æ—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.');

      // 401: –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫–ª—é—á API
      // 403: –î–æ—Å—Ç–∏–≥–ª–∏ –º–µ—Å—è—á–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ API –≤ 30000 –∑–∞–ø—Ä–æ—Å–æ–≤
      if (error.statusCode === 401 || error.statusCode === 403) 
        return callback(error, '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: vk.com/botsforchats');

      // –î–æ—Å—Ç–∏–≥–ª–∏ –º–∏–Ω—É—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
      if (error.statusCode === 429) 
        return callback(null, '–°–µ–π—á–∞—Å –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.');

      return callback(error, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.');
    });
}

module.exports = {
  enabled: true, 
  unique:  false, 
  mask: 0, 

  aliases:     ['—ç–º–æ—Ü–∏–∏', '—ç–º–æ'], 
  description: '–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —ç–º–æ—Ü–∏–∏ –Ω–∞ –ª–∏—Ü–µ —á–µ–ª–æ–≤–µ–∫–∞.', 
  use: '/emo <–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ>', 

  run
}