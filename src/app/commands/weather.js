'use strict';

/**
 * Module dependencies
 * @private
 */
const apiKey   = require('../../config').api.weather;
const prequest = require('request-promise');

/**
 * Local constants
 * @private
 */
const SERVICE_URL   = 'http://api.openweathermap.org/data/2.5/weather';
const UNKNOWN_ERROR = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.';
const WEATHER_EMOJI = {
  '–ø–∞—Å–º—É—Ä–Ω–æ':       'üòí', 
  '—è—Å–Ω–æ':           'üòä', 
  '—Å–ª–µ–≥–∫–∞ –æ–±–ª–∞—á–Ω–æ': 'üòè', 
  '–ª–µ–≥–∫–∏–π –¥–æ–∂–¥—å':   'üòë',
  '–æ–±–ª–∞—á–Ω–æ':        '‚òÅÔ∏è'
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ OpenWeatherMap –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 * @param {Object} apiResponse
 * @private
 */
function apiResToText (apiResponse) {
  let res = apiResponse;

  // –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã (–æ–±–ª–∞—á–Ω–æ, —è—Å–Ω–æ, etc.) –∏ —Å–º–∞–π–ª –∫ –Ω–µ–º—É
  let desc  = res.weather[0].description;
  let emoji = WEATHER_EMOJI[desc] || '';

  // –ì–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω–∞
  let city    = res.name;
  let country = res.sys.country;

  // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
  let temp = Math.round(res.main.temp);
      temp = temp > 0 ? `+${temp}` : temp;

  // –í–ª–∞–∂–Ω–æ—Å—Ç—å –∏ –≤–µ—Ç–µ—Ä
  let hum  = res.main.humidity;
  let wind = res.wind.speed;

  return `–°–µ–π—á–∞—Å ${desc} ${emoji} (${city}, ${country})\n\n` + 
         `üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp} ¬∞C\n` + 
         `üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${hum}%\n` + 
         `üéê –í–µ—Ç–µ—Ä: ${wind} –º/—Å`;
}

/**
 * Run command
 * @param  {Arguments}  arg
 * @param  {Function}   callback
 * @public
 */
function run (arg, callback) {
  let city = arg.fullText;

  // –ù–µ —É–∫–∞–∑–∞–Ω –≥–æ—Ä–æ–¥, –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∏—á–µ–≥–æ
  if (city === null) 
    return callback(null);

  // –û–±—Ä–µ–∑–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ –¥–æ 80 —Å–∏–º–≤–æ–ª–æ–≤
  city = city.slice(0, 80);

  return prequest(SERVICE_URL, {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
      qs: {
        appid: apiKey, 
        q:     city, 
        type:  'accurate', 
        lang:  'ru', 
        units: 'metric'
      }, 

      // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç –≤ JSON
      json: true
    })
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–∏—Å–∞
    .then(response => {
      let message = response.message && response.message.toLowerCase() || null;

      // –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
      if (message && ~message.indexOf('error')) {
        if (~message.indexOf('not found')) 
          // –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
          return callback(null, '–ü–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã. \n–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –≤—ã –æ—à–∏–±–ª–∏—Å—å –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞.');
        else 
          // –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, "–Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è" –Ω–∞–º
          return callback(null, UNKNOWN_ERROR);
      }

      return callback(null, apiResToText(response));
    })
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –æ—à–∏–±–∫–∏
    .catch(error => callback(error, UNKNOWN_ERROR));
}

module.exports = {
  enabled: true, 
  unique:  false, 
  mask: 0, 

  aliases:     ['–ø–æ–≥–æ–¥–∞'], 
  description: '–í–µ—Ä–Ω—ë—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ.', 
  use: '/weather <–≥–æ—Ä–æ–¥>', 

  run
}